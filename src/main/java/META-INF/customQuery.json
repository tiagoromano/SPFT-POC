{
  "auth": {
    "customId": "auth",
    "queryName": "Autenticar",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "User",
    "entityFullName": "app.entity.User",
    "query": "select o from User o where o.login \u003d :login",
    "queryParamsValues": [
      {
        "fieldName": "login",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": false,
      "POST": false,
      "PUT": false,
      "DELETE": false
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/auth/"
  },
  "roles": {
    "customId": "roles",
    "queryName": "Obter Autorização",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "Role",
    "entityFullName": "app.entity.Role",
    "query": "select o.id from Role o where o.user.login \u003d :login",
    "queryParamsValues": [
      {
        "fieldName": "login",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": false,
      "POST": false,
      "PUT": false,
      "DELETE": false,
      "FILTER": true
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/roles/"
  },
  "device": {
    "customId": "device",
    "queryName": "Atualizar Dispositivos",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "Device",
    "entityFullName": "app.entity.Device",
    "query": {
      "isValid": true,
      "isEmpty": false,
      "operationType": "object",
      "type": "select",
      "rulesEntity": [
        {
          "entity": "Device",
          "namespace": "app.entity.Device",
          "alias": "d"
        }
      ],
      "rulesSelect": [
        {
          "func": "get",
          "field": "d",
          "type": "string"
        }
      ],
      "rulesGroupBy": [],
      "rulesHaving": [],
      "rulesOrderBy": [],
      "rules": {
        "condition": "AND",
        "rules": [
          {
            "id": "d.id",
            "field": "d.id",
            "type": "string",
            "input": "text",
            "operator": "equal",
            "value": ":id",
            "valueIsField": false
          }
        ],
        "not": false,
        "valid": true
      },
      "isRawSql": false,
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "id",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/1jy88nt41afza/"
  },
  "query535810": {
    "customId": "ObterSolicitacaoFeriasPorOrgaoEStatus",
    "queryName": "Obter Solicitacao de Ferias por orgao e status",
    "sourceType": "entityFullName",
    "entitySimpleName": "SolicitacaoFerias",
    "entityFullName": "SPFT.entity.SolicitacaoFerias",
    "query": {
      "isEmpty": true,
      "isRawSql": true,
      "sqlContent": "select s.periodoConcessao.forcaTrabalho.nome as nomeFuncionario, s.periodoConcessao.forcaTrabalho.matricula as matriculaFuncionario, s.id as solicitacaoId, s.justificativa as justificativa, \ns.status as status, \nCASE WHEN (s.status \u003d 1) THEN \u0027Solicitado\u0027 WHEN (s.status \u003d 2) THEN \u0027Aprovado\u0027 WHEN (s.status \u003d 3) THEN \u0027Não Aprovado\u0027 ELSE \u0027Efetivado\u0027 END as statusDescricao,\ns.utilizaAbono as utilizaAbono, \ns.adiantaDecimo as adiantaDecimo, s.dividir as dividir, s.dataPeriodo1Inicio as dataPeriodo1Inicio, \ns.dataPeriodo1Fim as dataPeriodo1Fim, s.dataPeriodo2Inicio as dataPeriodo2Inicio, s.dataPeriodo2Fim as dataPeriodo2Fim, \ns.dataPeriodo3Inicio as dataPeriodo3Inicio, s.dataPeriodo3Fim as dataPeriodo3Fim, \nCONCAT(extract(day from s.dataPeriodo1Inicio),\u0027/\u0027, extract(month from s.dataPeriodo1Inicio), \u0027/\u0027, extract(year from s.dataPeriodo1Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo1Fim),\u0027/\u0027, extract(month from s.dataPeriodo1Fim), \u0027/\u0027, extract(year from s.dataPeriodo1Fim)) as periodo1,\nCONCAT(extract(day from s.dataPeriodo2Inicio),\u0027/\u0027, extract(month from s.dataPeriodo2Inicio), \u0027/\u0027, extract(year from s.dataPeriodo2Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo2Fim),\u0027/\u0027, extract(month from s.dataPeriodo2Fim), \u0027/\u0027, extract(year from s.dataPeriodo2Fim)) as periodo2,\nCONCAT(extract(day from s.dataPeriodo3Inicio),\u0027/\u0027, extract(month from s.dataPeriodo3Inicio), \u0027/\u0027, extract(year from s.dataPeriodo3Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo3Fim),\u0027/\u0027, extract(month from s.dataPeriodo3Fim), \u0027/\u0027, extract(year from s.dataPeriodo3Fim)) as periodo3\nfrom SolicitacaoFerias s, Orgao o  \nwhere o.codigoForcaTrabalho \u003d s.periodoConcessao.forcaTrabalho.id \nAND (o.id \u003d :orgaoId)   \nAND (:statusId IS NULL or s.status \u003d :statusId)  ",
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "orgaoId",
        "fieldValue": ""
      },
      {
        "fieldName": "statusId",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query535810/"
  },
  "query185551": {
    "customId": "ObterFeriasAprovadas",
    "queryName": "Obter Ferias Aprovadas",
    "sourceType": "entityFullName",
    "entitySimpleName": "SolicitacaoFerias",
    "entityFullName": "SPFT.entity.SolicitacaoFerias",
    "query": {
      "isEmpty": true,
      "isRawSql": true,
      "sqlContent": "select s.periodoConcessao.forcaTrabalho.nome as nomeFuncionario, s.periodoConcessao.forcaTrabalho.matricula as matriculaFuncionario, s.id as solicitacaoId, s.justificativa as justificativa, \ns.status as status, \nCASE WHEN (s.status \u003d 1) THEN \u0027Solicitado\u0027 WHEN (s.status \u003d 2) THEN \u0027Aprovado\u0027 WHEN (s.status \u003d 3) THEN \u0027Não Aprovado\u0027 ELSE \u0027Efetivado\u0027 END as statusDescricao,\ns.utilizaAbono as utilizaAbono, \ns.adiantaDecimo as adiantaDecimo, s.dividir as dividir, s.dataPeriodo1Inicio as dataPeriodo1Inicio, \ns.dataPeriodo1Fim as dataPeriodo1Fim, s.dataPeriodo2Inicio as dataPeriodo2Inicio, s.dataPeriodo2Fim as dataPeriodo2Fim, \ns.dataPeriodo3Inicio as dataPeriodo3Inicio, s.dataPeriodo3Fim as dataPeriodo3Fim, \nCONCAT(extract(day from s.dataPeriodo1Inicio),\u0027/\u0027, extract(month from s.dataPeriodo1Inicio), \u0027/\u0027, extract(year from s.dataPeriodo1Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo1Fim),\u0027/\u0027, extract(month from s.dataPeriodo1Fim), \u0027/\u0027, extract(year from s.dataPeriodo1Fim)) as periodo1,\nCONCAT(extract(day from s.dataPeriodo2Inicio),\u0027/\u0027, extract(month from s.dataPeriodo2Inicio), \u0027/\u0027, extract(year from s.dataPeriodo2Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo2Fim),\u0027/\u0027, extract(month from s.dataPeriodo2Fim), \u0027/\u0027, extract(year from s.dataPeriodo2Fim)) as periodo2,\nCONCAT(extract(day from s.dataPeriodo3Inicio),\u0027/\u0027, extract(month from s.dataPeriodo3Inicio), \u0027/\u0027, extract(year from s.dataPeriodo3Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo3Fim),\u0027/\u0027, extract(month from s.dataPeriodo3Fim), \u0027/\u0027, extract(year from s.dataPeriodo3Fim)) as periodo3\nfrom SolicitacaoFerias s, Orgao o  \nwhere \n(s.status \u003d 2)\nAND o.codigoForcaTrabalho \u003d s.periodoConcessao.forcaTrabalho.id ",
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query185551/"
  }
}