{
  "auth": {
    "customId": "auth",
    "queryName": "Autenticar",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "User",
    "entityFullName": "app.entity.User",
    "query": "select o from User o where o.login \u003d :login",
    "queryParamsValues": [
      {
        "fieldName": "login",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": false,
      "POST": false,
      "PUT": false,
      "DELETE": false
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/auth/"
  },
  "roles": {
    "customId": "roles",
    "queryName": "Obter Autorização",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "Role",
    "entityFullName": "app.entity.Role",
    "query": "select o.id from Role o where o.user.login \u003d :login",
    "queryParamsValues": [
      {
        "fieldName": "login",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": false,
      "POST": false,
      "PUT": false,
      "DELETE": false,
      "FILTER": true
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/roles/"
  },
  "device": {
    "customId": "device",
    "queryName": "Atualizar Dispositivos",
    "screen": "",
    "sourceType": "entityFullName",
    "entitySimpleName": "Device",
    "entityFullName": "app.entity.Device",
    "query": {
      "isValid": true,
      "isEmpty": false,
      "operationType": "object",
      "type": "select",
      "rulesEntity": [
        {
          "entity": "Device",
          "namespace": "app.entity.Device",
          "alias": "d"
        }
      ],
      "rulesSelect": [
        {
          "func": "get",
          "field": "d",
          "type": "string"
        }
      ],
      "rulesGroupBy": [],
      "rulesHaving": [],
      "rulesOrderBy": [],
      "rules": {
        "condition": "AND",
        "rules": [
          {
            "id": "d.id",
            "field": "d.id",
            "type": "string",
            "input": "text",
            "operator": "equal",
            "value": ":id",
            "valueIsField": false
          }
        ],
        "not": false,
        "valid": true
      },
      "isRawSql": false,
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "id",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true
    },
    "events": {},
    "defaultValues": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/1jy88nt41afza/"
  },
  "query133907": {
    "customId": "ObterGerenciasUsuarioLogado",
    "queryName": "Obter gerencias do usuario logado",
    "sourceType": "blockly",
    "baseEntity": "SPFT.entity.Orgao",
    "blockly": {
      "blocklyClass": "blockly.Gerencia",
      "blocklyMethod": "ObterGerenciasUsuarioLogado",
      "blocklyLanguage": "java",
      "blocklyJson": {
        "namespace": "blockly.Gerencia",
        "sourcePath": "src/main/java/blockly/Gerencia.blockly",
        "language": "java",
        "class": "blockly.Gerencia",
        "methods": [
          {
            "name": "ObterGerenciasDelegadasPorUsuarioLogado",
            "hasReturn": "true",
            "params": []
          },
          {
            "name": "ObterGerenciasUsuarioLogado",
            "hasReturn": "true",
            "params": [
              "Dados"
            ]
          }
        ]
      },
      "blocklyGETMethod": "ObterGerenciasUsuarioLogado",
      "blocklyPOSTMethod": "default",
      "blocklyPUTMethod": "default",
      "blocklyDELETEMethod": "default",
      "blocklyFILTERMethod": "default",
      "blocklyCOUNTMethod": "ObterGerenciasUsuarioLogado"
    },
    "query": "",
    "queryParamsValues": [],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {
      "codigoForcaTrabalho": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "areaAtuacao": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "dataInicioValidade": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "nome": {
        "key": false,
        "nullable": false,
        "type": "String"
      },
      "dataFimValidade": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "id": {
        "key": true,
        "nullable": false,
        "type": "Integer"
      },
      "orgaoSuperior": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "descricao": {
        "key": false,
        "nullable": true,
        "type": "String"
      }
    },
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/query133907/"
  },
  "query437535": {
    "customId": "obterForcaTrabalhoFiltrado",
    "queryName": "Obter Força de Trabalho por chave matricula e orgao",
    "sourceType": "blockly",
    "baseEntity": "SPFT.entity.ForcaTrabalho",
    "blockly": {
      "type": "server",
      "blocklyMethod": "ObterPorChaveOuMatriculaOuOrgao",
      "blocklyClass": "blockly.ForcaTrabalho",
      "blocklyLanguage": "java",
      "blocklyParams": [],
      "blocklyJson": {
        "namespace": "blockly.ForcaTrabalho",
        "sourcePath": "src/main/java/blockly/ForcaTrabalho.blockly",
        "language": "java",
        "class": "blockly.ForcaTrabalho",
        "methods": [
          {
            "name": "ObterPorChaveOuMatriculaOuOrgao",
            "hasReturn": "true",
            "params": [
              "chaveEmpregado",
              "matriculaEmpregado",
              "gerencia"
            ]
          }
        ]
      },
      "blocklyGETMethod": "ObterPorChaveOuMatriculaOuOrgao",
      "blocklyPOSTMethod": "default",
      "blocklyPUTMethod": "default",
      "blocklyDELETEMethod": "default",
      "blocklyFILTERMethod": "default",
      "blocklyCOUNTMethod": "ObterPorChaveOuMatriculaOuOrgao"
    },
    "query": "",
    "queryParamsValues": [
      {
        "fieldName": "chaveEmpregado",
        "fieldValue": ""
      },
      {
        "fieldName": "matriculaEmpregado",
        "fieldValue": ""
      },
      {
        "fieldName": "gerencia",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {
      "emailParticular1": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoReligiao": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "emailParticular2": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "motivoReqCed": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "telefone": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "situacao": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "orgao": {
        "key": false,
        "nullable": false,
        "type": "Orgao"
      },
      "dataCessao": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "codigoGrupoEmpregado": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "reqCed": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoFuncao": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "codigoInativo": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoCidade": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "numeroExterno": {
        "key": false,
        "nullable": true,
        "type": "Long"
      },
      "codigoSubgrupoEmpregado": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "dataAdmissao": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "cep": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "uf": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "passaporte": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "motivoStatus": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "cpf": {
        "key": false,
        "nullable": true,
        "type": "Long"
      },
      "codigoEstadoCivil": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "celular": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "id": {
        "key": true,
        "nullable": false,
        "type": "Integer"
      },
      "dataNascimento": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "dataCadastro": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "codigoLogin": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "email": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "endereco": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "centroCusto": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "nome": {
        "key": false,
        "nullable": false,
        "type": "String"
      },
      "codigoCargo": {
        "key": false,
        "nullable": false,
        "type": "Integer"
      },
      "codigoAplicacaoCargo": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoPais": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "siglaEmpresaOrigem": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "terraMar": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "matricula": {
        "key": false,
        "nullable": true,
        "type": "Long"
      },
      "enderecoComplemento": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoRaca": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "codigoImovel": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "nomeForcaTrabalhoGuerra": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "sexo": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "numeroRamal": {
        "key": false,
        "nullable": true,
        "type": "Long"
      },
      "motivoInativo": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "enderecoBairro": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "tipoSanguineo": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "codigoEscolaridade": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      }
    },
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/query437535/"
  },
  "query6294": {
    "customId": "obterPeriodoConcessivo",
    "queryName": "Obter Periodo Concessivo",
    "sourceType": "blockly",
    "baseEntity": "SPFT.entity.SolicitacaoFerias",
    "blockly": {
      "type": "server",
      "blocklyMethod": "ObterPeriodosConcessivos",
      "blocklyClass": "blockly.Ferias",
      "blocklyLanguage": "java",
      "blocklyParams": [],
      "blocklyJson": {
        "namespace": "blockly.Ferias",
        "sourcePath": "src/main/java/blockly/Ferias.blockly",
        "language": "java",
        "class": "blockly.Ferias",
        "methods": [
          {
            "name": "ObterPeriodosConcessivos",
            "hasReturn": "true",
            "params": [
              "login"
            ]
          }
        ]
      },
      "blocklyGETMethod": "ObterPeriodosConcessivos",
      "blocklyPOSTMethod": "default",
      "blocklyPUTMethod": "default",
      "blocklyDELETEMethod": "default",
      "blocklyFILTERMethod": "default",
      "blocklyCOUNTMethod": "ObterPeriodosConcessivos"
    },
    "query": "",
    "queryParamsValues": [
      {
        "fieldName": "login",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {
      "periodoConcessao": {
        "key": false,
        "nullable": false,
        "type": "PeriodoConcessao"
      },
      "dataPeriodo1Fim": {
        "key": false,
        "nullable": false,
        "type": "Date"
      },
      "dataPeriodo1Inicio": {
        "key": false,
        "nullable": false,
        "type": "Date"
      },
      "utilizaAbono": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "dataPeriodo2Inicio": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "dataAtualizacao": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "adiantaDecimo": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "justificativa": {
        "key": false,
        "nullable": true,
        "type": "String"
      },
      "dataPeriodo3Inicio": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "dividir": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      },
      "id": {
        "key": true,
        "nullable": false,
        "type": "Integer"
      },
      "dataPeriodo3Fim": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "dataPeriodo2Fim": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "dataAtualizacaoDate": {
        "key": false,
        "nullable": true,
        "type": "Date"
      },
      "status": {
        "key": false,
        "nullable": true,
        "type": "Integer"
      }
    },
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/query/query6294/"
  },
  "query535810": {
    "customId": "ObterSolicitacaoFeriasPorOrgaoEStatus",
    "queryName": "Obter Solicitacao de Ferias por orgao e status",
    "sourceType": "entityFullName",
    "entitySimpleName": "SolicitacaoFerias",
    "entityFullName": "SPFT.entity.SolicitacaoFerias",
    "query": {
      "isEmpty": true,
      "isRawSql": true,
      "sqlContent": "select s.periodoConcessao.forcaTrabalho.nome as nomeFuncionario, s.periodoConcessao.forcaTrabalho.matricula as matriculaFuncionario, s.id as solicitacaoId, s.justificativa as justificativa, \ns.status as status, \nCASE WHEN (s.status \u003d 1) THEN \u0027Solicitado\u0027 WHEN (s.status \u003d 2) THEN \u0027Aprovado\u0027 WHEN (s.status \u003d 3) THEN \u0027Não Aprovado\u0027 ELSE \u0027Efetivado\u0027 END as statusDescricao,\ns.utilizaAbono as utilizaAbono, \ns.adiantaDecimo as adiantaDecimo, s.dividir as dividir, s.dataPeriodo1Inicio as dataPeriodo1Inicio, \ns.dataPeriodo1Fim as dataPeriodo1Fim, s.dataPeriodo2Inicio as dataPeriodo2Inicio, s.dataPeriodo2Fim as dataPeriodo2Fim, \ns.dataPeriodo3Inicio as dataPeriodo3Inicio, s.dataPeriodo3Fim as dataPeriodo3Fim, \nCONCAT(extract(day from s.dataPeriodo1Inicio),\u0027/\u0027, extract(month from s.dataPeriodo1Inicio), \u0027/\u0027, extract(year from s.dataPeriodo1Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo1Fim),\u0027/\u0027, extract(month from s.dataPeriodo1Fim), \u0027/\u0027, extract(year from s.dataPeriodo1Fim)) as periodo1,\nCONCAT(extract(day from s.dataPeriodo2Inicio),\u0027/\u0027, extract(month from s.dataPeriodo2Inicio), \u0027/\u0027, extract(year from s.dataPeriodo2Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo2Fim),\u0027/\u0027, extract(month from s.dataPeriodo2Fim), \u0027/\u0027, extract(year from s.dataPeriodo2Fim)) as periodo2,\nCONCAT(extract(day from s.dataPeriodo3Inicio),\u0027/\u0027, extract(month from s.dataPeriodo3Inicio), \u0027/\u0027, extract(year from s.dataPeriodo3Inicio),\n\u0027 à \u0027, extract(day from s.dataPeriodo3Fim),\u0027/\u0027, extract(month from s.dataPeriodo3Fim), \u0027/\u0027, extract(year from s.dataPeriodo3Fim)) as periodo3\nfrom SolicitacaoFerias s, Orgao o  \nwhere (o.codigoForcaTrabalho \u003d s.periodoConcessao.forcaTrabalho.id or s.periodoConcessao.forcaTrabalho.orgao.id \u003d  :orgaoId)\nAND (o.id \u003d :orgaoId)   \nAND (CONCAT(s.status, \u0027\u0027) \u003d CONCAT(:statusId, \u0027\u0027) or CONCAT(:statusId,\u0027\u0027) is NULL)  ",
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "orgaoId",
        "fieldValue": ""
      },
      {
        "fieldName": "statusId",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query535810/"
  },
  "query630664": {
    "customId": "query630664",
    "queryName": "Obter gerencias delegadas pelo usuario logado",
    "sourceType": "entityFullName",
    "entitySimpleName": "Delegacao",
    "entityFullName": "SPFT.entity.Delegacao",
    "query": {
      "isEmpty": true,
      "isRawSql": true,
      "sqlContent": "select d.id, d.forcaTrabalhoDelegado.codigoLogin, d.forcaTrabalhoDelegado.nome, d.orgao.nome, d.dataCriacao \nfrom Delegacao d where d.forcaTrabalhoGerente.codigoLogin \u003d :loginGerente AND d.status \u003d 1",
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "loginGerente",
        "fieldValue": {
          "type": "server",
          "blocklyMethod": "ObterUsuarioLogado",
          "blocklyClass": "blockly.Autenticacao",
          "blocklyLanguage": "java",
          "blocklyParams": [],
          "blocklyJson": {
            "namespace": "blockly.Autenticacao",
            "sourcePath": "src/main/java/blockly/Autenticacao.blockly",
            "language": "java",
            "methods": [
              {
                "name": "FazerLoginOpenIDConnect",
                "hasReturn": "true",
                "params": [
                  "chave",
                  "senha"
                ]
              },
              {
                "name": "FazerLogin",
                "hasReturn": "true",
                "params": [
                  "chave",
                  "senha"
                ]
              },
              {
                "name": "ObterUsuarioLogado",
                "hasReturn": "true",
                "params": []
              }
            ]
          }
        }
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query630664/"
  },
  "query780539": {
    "customId": "obterFeriasAprovadas",
    "queryName": "Obter Ferias Aprovadas",
    "sourceType": "entityFullName",
    "entitySimpleName": "SolicitacaoFerias",
    "entityFullName": "SPFT.entity.SolicitacaoFerias",
    "query": {
      "isEmpty": true,
      "isRawSql": true,
      "sqlContent": "select  s.periodoConcessao.forcaTrabalho.id as forcaTrabalhoId,\r\n        s.periodoConcessao.forcaTrabalho.nome as nomeFuncionario,\r\n        s.periodoConcessao.forcaTrabalho.codigoLogin as codigoLogin,\r\n        s.periodoConcessao.forcaTrabalho.matricula as matriculaFuncionario,\r\n        s.periodoConcessao.dataConcessaoInicial as dataConcessaoInicial,\r\n        s.periodoConcessao.dataConcessaoFinal as dataConcessaoFinal,\r\n        s.periodoConcessao.dataAquisicaoInicial as dataAquisicaoInicial,\r\n        s.periodoConcessao.dataAquisicaoFinal as dataAquisicaoFinal,\r\n        s.periodoConcessao.totalDiasContigente as totalDiasContigente,\r\n        CASE WHEN (s.utilizaAbono \u003d 1) THEN \u0027Sim\u0027 WHEN (s.utilizaAbono \u003d 0) THEN \u0027Não\u0027 ELSE \u0027Não\u0027 END as utilizaAbonoDescricao,\r\n        s.utilizaAbono as utilizaAbono, \r\n        CASE WHEN (s.adiantaDecimo \u003d 1) THEN \u0027Sim\u0027 WHEN (s.adiantaDecimo \u003d 0) THEN \u0027Não\u0027 ELSE \u0027Não\u0027 END as adiantaDecimoDescricao,\r\n        s.adiantaDecimo as adiantaDecimo,\r\n        s.id as solicitacaoId,\r\n        s.justificativa as justificativa, \r\n        s.status as status, \r\n        CASE WHEN (s.status \u003d 1) THEN \u0027Solicitado\u0027 WHEN (s.status \u003d 2) THEN \u0027Aprovado\u0027 WHEN (s.status \u003d 3) THEN \u0027Não Aprovado\u0027 ELSE \u0027Efetivado\u0027 END as statusDescricao,\r\n        s.dividir as dividir, \r\n        CASE WHEN (s.dividir \u003d 1) THEN \u0027Sim\u0027 WHEN (s.dividir \u003d 0) THEN \u0027Não\u0027 ELSE \u0027Não\u0027 END as dividirDescricao,\r\n        s.dataPeriodo1Inicio as dataPeriodo1Inicio, \r\n        s.dataPeriodo1Fim as dataPeriodo1Fim,\r\n        s.dataPeriodo2Inicio as dataPeriodo2Inicio,\r\n        s.dataPeriodo2Fim as dataPeriodo2Fim, \r\n        s.dataPeriodo3Inicio as dataPeriodo3Inicio,\r\n        s.dataPeriodo3Fim as dataPeriodo3Fim, \r\n        CONCAT(extract(day from s.dataPeriodo1Inicio),\u0027/\u0027, extract(month from s.dataPeriodo1Inicio), \u0027/\u0027, extract(year from s.dataPeriodo1Inicio), \u0027 à \u0027, extract(day from s.dataPeriodo1Fim),\u0027/\u0027, extract(month from s.dataPeriodo1Fim), \u0027/\u0027, extract(year from s.dataPeriodo1Fim)) as periodo1,\r\n        CONCAT(extract(day from s.dataPeriodo2Inicio),\u0027/\u0027, extract(month from s.dataPeriodo2Inicio), \u0027/\u0027, extract(year from s.dataPeriodo2Inicio), \u0027 à \u0027, extract(day from s.dataPeriodo2Fim),\u0027/\u0027, extract(month from s.dataPeriodo2Fim), \u0027/\u0027, extract(year from s.dataPeriodo2Fim)) as periodo2,\r\n        CONCAT(extract(day from s.dataPeriodo3Inicio),\u0027/\u0027, extract(month from s.dataPeriodo3Inicio), \u0027/\u0027, extract(year from s.dataPeriodo3Inicio), \u0027 à \u0027, extract(day from s.dataPeriodo3Fim),\u0027/\u0027, extract(month from s.dataPeriodo3Fim), \u0027/\u0027, extract(year from s.dataPeriodo3Fim)) as periodo3\r\n\r\nfrom SolicitacaoFerias s, Orgao o  \r\nwhere o.codigoForcaTrabalho \u003d s.periodoConcessao.forcaTrabalho.id \r\nAND (:orgaoId IS NULL OR o.id LIKE CONCAT(:orgaoId, \u0027\u0027))\r\nAND (:codigoLogin IS NULL OR s.periodoConcessao.forcaTrabalho.codigoLogin LIKE CONCAT(\u0027%\u0027, :codigoLogin, \u0027%\u0027))\r\nAND (:status IS NULL OR s.status IN(:status))\r\nAND (:users IS NULL OR LOCATE(s.periodoConcessao.forcaTrabalho.id, :users) \u003e 0 ) \r\nAND ((s.dataPeriodo1Inicio BETWEEN :startDate AND :endDate)\r\n\t OR (s.dataPeriodo1Fim BETWEEN :startDate AND :endDate)\r\n\t OR (s.dataPeriodo2Inicio BETWEEN :startDate AND :endDate)\r\n\t OR (s.dataPeriodo2Fim BETWEEN :startDate AND :endDate)\r\n\t OR (s.dataPeriodo3Inicio BETWEEN :startDate AND :endDate)\r\n\t OR (s.dataPeriodo3Fim BETWEEN :startDate AND :endDate))",
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "orgaoId",
        "fieldValue": ""
      },
      {
        "fieldName": "codigoLogin",
        "fieldValue": ""
      },
      {
        "fieldName": "status",
        "fieldValue": ""
      },
      {
        "fieldName": "users",
        "fieldValue": ""
      },
      {
        "fieldName": "startDate",
        "fieldValue": ""
      },
      {
        "fieldName": "endDate",
        "fieldValue": ""
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {
      "diasPrimeiraParcela": {
        "type": "server",
        "blocklyMethod": "getDaysQuantity1",
        "blocklyClass": "blockly.TelaPlanningVacation",
        "blocklyLanguage": "java",
        "blocklyParams": [
          {
            "name": "rowData",
            "value": "data",
            "type": "CUSTOM"
          }
        ],
        "blocklyJson": {
          "namespace": "blockly.TelaPlanningVacation",
          "sourcePath": "src/main/java/blockly/TelaPlanningVacation.blockly",
          "language": "java",
          "methods": [
            {
              "name": "ObterDataAtual",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "AoEntrar",
              "hasReturn": "true",
              "params": [
                "login"
              ]
            },
            {
              "name": "ObterDataFinal",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "getDaysQuantity1",
              "hasReturn": "true",
              "params": [
                "rowData"
              ]
            },
            {
              "name": "AlterarDataFinal",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "getDaysQuantity2",
              "hasReturn": "true",
              "params": [
                "rowData"
              ]
            }
          ]
        }
      },
      "diasSegundaParcela": {
        "type": "server",
        "blocklyMethod": "getDaysQuantity2",
        "blocklyClass": "blockly.TelaPlanningVacation",
        "blocklyLanguage": "java",
        "blocklyParams": [
          {
            "name": "rowData",
            "value": "data",
            "type": "CUSTOM"
          }
        ],
        "blocklyJson": {
          "namespace": "blockly.TelaPlanningVacation",
          "sourcePath": "src/main/java/blockly/TelaPlanningVacation.blockly",
          "language": "java",
          "methods": [
            {
              "name": "ObterDataAtual",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "AoEntrar",
              "hasReturn": "true",
              "params": [
                "login"
              ]
            },
            {
              "name": "ObterDataFinal",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "getDaysQuantity1",
              "hasReturn": "true",
              "params": [
                "rowData"
              ]
            },
            {
              "name": "AlterarDataFinal",
              "hasReturn": "false",
              "params": []
            },
            {
              "name": "getDaysQuantity2",
              "hasReturn": "true",
              "params": [
                "rowData"
              ]
            }
          ]
        }
      }
    },
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {
      "diasPrimeiraParcela": {
        "type": "String"
      },
      "diasSegundaParcela": {
        "type": "String"
      }
    },
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query780539/"
  },
  "query796272": {
    "customId": "query796272",
    "queryName": "Obter Historico Delegacoes",
    "sourceType": "entityFullName",
    "entitySimpleName": "Historico",
    "entityFullName": "app.entity.Historico",
    "query": {
      "isValid": true,
      "isEmpty": false,
      "operationType": "object",
      "type": "select",
      "rulesEntity": [
        {
          "entity": "Historico",
          "namespace": "app.entity.Historico",
          "alias": "h"
        }
      ],
      "rulesSelect": [
        {
          "func": "get",
          "field": "h",
          "type": "string"
        }
      ],
      "rulesGroupBy": [],
      "rulesHaving": [],
      "rulesOrderBy": [],
      "rules": {
        "condition": "AND",
        "rules": [
          {
            "id": "h.forcaTrabalhoChaveAcao",
            "field": "h.forcaTrabalhoChaveAcao",
            "type": "string",
            "input": "text",
            "operator": "equal",
            "value": ":forcaTrabalhoChaveAcao",
            "valueIsField": false
          },
          {
            "id": "h.tabela",
            "field": "h.tabela",
            "type": "string",
            "input": "text",
            "operator": "equal",
            "value": "DELEGACAO",
            "valueIsField": false
          }
        ],
        "not": false,
        "valid": true
      },
      "isRawSql": false,
      "multiTenant": true,
      "paginatorAutomatic": false
    },
    "queryParamsValues": [
      {
        "fieldName": "forcaTrabalhoChaveAcao",
        "fieldValue": {
          "type": "server",
          "blocklyMethod": "ObterUsuarioLogado",
          "blocklyClass": "blockly.Autenticacao",
          "blocklyLanguage": "java",
          "blocklyParams": [],
          "blocklyJson": {
            "namespace": "blockly.Autenticacao",
            "sourcePath": "src/main/java/blockly/Autenticacao.blockly",
            "language": "java",
            "methods": [
              {
                "name": "FazerLoginOpenIDConnect",
                "hasReturn": "true",
                "params": [
                  "chave",
                  "senha"
                ]
              },
              {
                "name": "FazerLogin",
                "hasReturn": "true",
                "params": [
                  "chave",
                  "senha"
                ]
              },
              {
                "name": "ObterUsuarioLogado",
                "hasReturn": "true",
                "params": []
              }
            ]
          }
        }
      }
    ],
    "verbs": {
      "GET": true,
      "POST": true,
      "PUT": true,
      "DELETE": true,
      "FILTER": true,
      "COUNT": true
    },
    "events": {},
    "defaultValues": {},
    "defaultValuesProperties": {},
    "security": {},
    "calcFields": {},
    "calcFieldsSecurity": {},
    "calcFieldsProperties": {},
    "errorHandles": {},
    "serviceUrl": "api/cronapi/odata/v2/query796272/"
  }
}